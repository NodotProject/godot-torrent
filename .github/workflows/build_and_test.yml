name: Build and Test
on: [push, pull_request]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential scons cmake libssl-dev libboost-dev pkg-config

    - name: Download Godot 4 Headless
      run: |
        wget https://github.com/godotengine/godot/releases/download/4.5-stable/Godot_v4.5-stable_linux.x86_64.zip
        unzip Godot_v4.5-stable_linux.x86_64.zip
        mv Godot_v4.5-stable_linux.x86_64 godot
        chmod +x godot

    - name: Install SCons
      run: pip install scons

    - name: Cache libtorrent build
      uses: actions/cache@v4
      id: cache-libtorrent
      with:
        path: |
          libtorrent/build
        key: ${{ runner.os }}-libtorrent-${{ hashFiles('libtorrent/CMakeLists.txt', 'libtorrent/src/**') }}
        restore-keys: |
          ${{ runner.os }}-libtorrent-

    - name: Build libtorrent
      if: steps.cache-libtorrent.outputs.cache-hit != 'true'
      run: |
        cd libtorrent
        mkdir -p build && cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
          -Dstatic_runtime=ON -Dbuild_shared_libs=OFF -Dbuild_tests=OFF \
          -Dbuild_examples=OFF -Dbuild_tools=OFF
        make -j$(nproc)

    - name: Cache godot-cpp build
      uses: actions/cache@v4
      id: cache-godot-cpp
      with:
        path: |
          godot-cpp/bin
          godot-cpp/gen
          godot-cpp/.sconsign.dblite
        key: ${{ runner.os }}-godot-cpp-linux-x86_64-${{ hashFiles('godot-cpp/SConstruct', 'godot-cpp/gdextension/extension_api.json') }}
        restore-keys: |
          ${{ runner.os }}-godot-cpp-linux-x86_64-
          ${{ runner.os }}-godot-cpp-

    - name: Build godot-cpp bindings
      if: steps.cache-godot-cpp.outputs.cache-hit != 'true'
      run: |
        cd godot-cpp
        scons platform=linux generate_bindings=yes target=template_release
        scons platform=linux generate_bindings=yes target=template_debug

    - name: Compile GDExtension
      run: scons platform=linux target=template_release

    - name: Run GUT tests
      run: |
        # Import the project first
        timeout 30s ./godot --headless --import || true
        # Run the tests
        ./run_tests.sh